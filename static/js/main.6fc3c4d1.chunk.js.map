{"version":3,"sources":["components/Menu/Menu.styled.js","components/Menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","styled","nav","open","theme","mobile","Menu","setOpen","onClick","style","position","top","left","right","bottom","justifyContent","alignItems","class","href","alignSelf","src","alt","height","width","App","useState","menudrawr","setmenudrawr","alignContent","target","rel","async","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"o0DAGO,IAAMA,E,KAAaC,EAAOC,IAAV,KAeR,qBAAGC,KAAkB,gBAAkB,sBAE/B,qBAAGC,MAAkBC,UCwD7BC,EArEF,SAAC,GAAsB,IAApBH,EAAmB,EAAnBA,KAAMI,EAAa,EAAbA,QACpB,OACE,kBAACP,EAAD,CAAYG,KAAMA,EAAMK,QAAS,kBAAMD,GAASJ,KAC/C,iCAAM,6CAMH,uBAAGM,MAAO,CAACC,SAAU,WAAYC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,eAAgB,SAAUC,WAAY,WACnH,qCAGI,yBAAKC,MAAM,QACX,uBAAGA,MAAM,SAASC,KAAM,0CACpB,uCACA,yBAAKT,MAAO,CAACU,UAAU,UAAWC,IAAI,cAAcC,IAAI,WAAWC,OAAS,OAAOC,MAAQ,QAC7F,6FAEA,uBAAGN,MAAM,SAASC,KAAM,yCAEpB,qDACA,yBAAKT,MAAO,CAACU,UAAU,UAAWC,IAAI,SAASC,IAAI,WAAWC,OAAS,OAAOC,MAAQ,QACtF,sMAEJ,uBAAGN,MAAM,SAASC,KAAM,uBACtB,2CACA,yBAAKT,MAAO,CAACU,UAAU,UAAWC,IAAI,eAAeC,IAAI,WAAWC,OAAS,OAAOC,MAAQ,QAC5F,0IAGJ,yBAAKN,MAAM,QACX,uBAAGA,MAAM,SAASC,KAAM,+CAExB,8CACA,yBAAKT,MAAO,CAACU,UAAU,UAAWC,IAAI,mBAAmBC,IAAI,WAAWC,OAAS,OAAOC,MAAQ,QAChG,uKAEJ,uBAAGN,MAAM,SAASC,KAAM,sCAEpB,mDACA,yBAAKT,MAAO,CAACU,UAAU,UAAWC,IAAI,UAAUC,IAAI,WAAWC,OAAS,OAAOC,MAAQ,QACvF,iIAEJ,uBAAGN,MAAM,SAASC,KAAM,uCAEpB,yCACA,yBAAKT,MAAO,CAACU,UAAU,UAAWC,IAAI,WAAWC,IAAI,WAAWC,OAAS,OAAOC,MAAQ,QACxF,qGAGA,yBAAKN,MAAM,QACX,uBAAGA,MAAM,SAASC,KAAM,2CAExB,yCACA,yBAAKT,MAAO,CAACU,UAAU,UAAWC,IAAI,eAAeC,IAAI,WAAWC,OAAS,OAAOC,MAAQ,QAC5F,oHCxBSC,MAjCf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,KAIX,OACE,8BAEF,8BACC,kBAAC,EAAD,CAAOxB,KAAMuB,EAAWnB,QAASoB,IAC9B,yBAAKV,MAAM,OACT,wBAAIR,MAAO,CAACmB,aAAa,UAAzB,kBACA,4BAAI,4BAAQnB,MAAO,CAACmB,aAAa,SAAUpB,QAAS,kBAAKmB,GAAcD,KAAnE,cAMJ,oFAA0D,uBAAGG,OAAO,SAASC,IAAI,sBAAsBZ,KAAK,2HAAlD,YAA1D,kVAAikB,uBAAGW,OAAO,SAASC,IAAI,sBAAsBZ,KAAK,kCAAlD,SAAjkB,KAEF,wBAAID,MAAM,SACN,4BAAI,uBAAGC,KAAK,kCAAR,YAKZ,4BAAQa,OAAK,EAACX,IAAI,uBCnBFY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.6fc3c4d1.chunk.js","sourcesContent":["// Menu.styled.js\nimport styled from 'styled-components';\n\nexport const StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background: white;\n  width: 100%;\n  z-index: 6;\n  margin-right: 0rem;\n  height: 100%;\n  text-align: right;\n  padding: 1rem;\n  position: absolute;\n  top: 0;\n  right: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n  \n  @media (max-width: ${({ theme }) => theme.mobile}) {\n    width: 100%;\n  }\n\n  a:link{\n    border: none;\n  }\n\n  a:hover {\n    border-bottom-color: none;\n    color: black;\n  }\n\n  img:hover {\n    transition: .1s ease;\n    opacity: 0.5;\n  }\n\n  .rows {\n    margin-bottom: 10 px;\n    height: 400px;\n    display: flex;\n    flex-direction: row;\n    flex-shrink: 0;\n    justify-content: space-between;\n    \n  }\n  .column {\n    float: left;\n    width: 33.33%;\n    display: flex;\n    flex-direction: column;\n    align-content: start;\n  }\n  .columnsmall {\n    float: center;\n    width: 33.33%;\n  }\n\n  h1 {\n    margin: 10px;\n    text-align: center;\n  }\n  h1:hover {\n    margin: 10px;\n    text-align: center;\n  }\n\n  h2 {\n    margin: 10px;\n    font-size: 0.45rem;\n    text-align: center;\n    \n  }\n\n  h3 {\n    text-align: center;\n    margin: 10px;\n    padding: 1px;\n    line-height: 130%;\n    font-size: 0.3rem;\n  }\n\n  @media screen and (min-width: 1460px) {\n    h2 {\n      font-size: 25.5px;\n      margin: 10px;\n      padding: 10px;\n      text-align: center;\n    }\n\n    h3 {\n      text-align: center;\n      margin: 20px;\n      padding: 10px;\n      line-height: 130%;\n      font-size: 17px;\n    }\n  }\n`;","// Menu.js\nimport React from 'react';\nimport { StyledMenu } from './Menu.styled';\nimport { bool } from 'prop-types';\n\n// import { GrInstagram,GrHome,GrMailOption,GrGithub } from \"react-icons/gr\";\n\nconst Menu = ({ open ,setOpen}) => {\n  return (\n    <StyledMenu open={open} onClick={() => setOpen(!open)}>\n     <div> <h1>\n        Hobbyprojekt\n      </h1>\n      \n        </div>\n      \n        <a style={{position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, justifyContent: 'center', alignItems: 'center'}}>\n  <h2>Back</h2>\n</a>\n\n      <div class='rows'>\n      <a class=\"column\" href={\"https://svenhellsten.github.io/ordvirr\"}>\n          <h2>Ordvirr</h2>\n          <img style={{alignSelf:\"center\"}} src=\"ordvirr.png\" alt=\"no image\" height = \"auto\" width = \"80%\" ></img>\n        <h3>Ett ordgissarspel med topplistor och dagligen unika spelare!</h3>\n          </a>\n        <a class=\"column\" href={\"https://svenhellsten.github.io/varvet\"}>\n      \n            <h2>Varvet: visualisering</h2>\n            <img style={{alignSelf:\"center\"}} src=\"GV.png\" alt=\"no image\" height = \"auto\" width = \"80%\" ></img>\n            <h3>En hemsida där man kan se hur de 3337 löparna från GöteborgsVarvet Virtual race sprang under helgen. Dra i tids reglaget för att se hur de rör sig!</h3>\n        </a>\n        <a class=\"column\" href={\"https://sardiner.se\"}>\n          <h2>Sardiner.se</h2>\n          <img style={{alignSelf:\"center\"}} src=\"Sardiner.png\" alt=\"no image\" height = \"auto\" width = \"80%\" ></img>\n          <h3>Hemsidan för företaget Pilcardus som importerar högkvalitativa livsmedel till bland annat ICA. </h3>\n        </a>\n      </div>\n      <div class='rows'>\n      <a class=\"column\" href={\"https://svenhellsten.github.io/scullrunners\"}>\n      \n      <h2>Strava counter</h2>\n      <img style={{alignSelf:\"center\"}} src=\"scullrunners.png\" alt=\"no image\" height = \"auto\" width = \"80%\" ></img>\n      <h3>Låter min lokala springklubb räkna ihop alla kilometrar under året. Och se om vi ligger i fas för det årliga målet. </h3>\n  </a>\n  <a class=\"column\" href={\"https://svenhellsten.github.io/apk\"}>\n      \n      <h2>Systemets APK lista</h2>\n      <img style={{alignSelf:\"center\"}} src=\"apk.png\" alt=\"no image\" height = \"auto\" width = \"80%\" ></img>\n      <h3>Uppdateras dagligen och visar vad i systemets sortument som har bäst APK (alkohol per krona) </h3>\n  </a>\n  <a class=\"column\" href={\"https://svenhellsten.github.io/nian\"}>\n      \n      <h2>Nian koll</h2>\n      <img style={{alignSelf:\"center\"}} src=\"nian.jpg\" alt=\"no image\" height = \"auto\" width = \"80%\" ></img>\n      <h3>En dubbelkoll för lösningar av den populära \"nian\" i SvD. </h3>\n  </a>\n      </div>\n      <div class='rows'>\n      <a class=\"column\" href={\"https://svenhellsten.github.io/nianfusk\"}>\n      \n      <h2>Nian fusk</h2>\n      <img style={{alignSelf:\"center\"}} src=\"nianfusk.png\" alt=\"no image\" height = \"auto\" width = \"80%\" ></img>\n      <h3>Om man bara vill fuska istället så kan man mata in bokstäverna här. </h3>\n  </a>\n      </div>\n    \n\n    \n        \n    </StyledMenu>\n  )\n}\nMenu.propTypes = {\n    open: bool.isRequired,\n  }\nexport default Menu;","import React, { useState, useEffect, } from \"react\";\n\nimport './App.css';\nimport './index.css';\nimport {Menu } from './components';\n\nfunction App() {\n  const [menudrawr, setmenudrawr] = useState(false);\n\n\n    return (\n      <body>\n\n    <main>\n    {<Menu  open={menudrawr} setOpen={setmenudrawr}></Menu>}\n        <div class=\"row\">\n          <h1 style={{alignContent:\"start\"}}>Sven Hellsten </h1>\n          <h1><button style={{alignContent:\"start\"}} onClick={()=> setmenudrawr(!menudrawr)}>Projects</button></h1>\n          </div>\n          \n        \n\n          \n          <p >I am recently graduated Computer Science student from <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.chalmers.se/en/education/programmes/masters-info/Pages/Computer-Science-algorithms-languages-and-logic.aspx\">Chalmers</a>. I have a true love for problem solving and writing code. I specifically enjoy Computer Graphics and acoustics. Outside of tech I like cooking and running. If you are looking for a fullstack developer, someone to go for a run with, or want to grab your tin foil hat and have a chat about the issues with todays technology. Send me an <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:sven.hellsten@gmail.com\">email</a>.</p>\n      \n        <ul class=\"links\">\n            <li><a href=\"mailto:sven.hellsten@gmail.com\">Email</a></li>\n        </ul>\n\n    </main>\n\n    <script async src=\"javascript/ga.js\"></script>\n\n</body>\n        \n    );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}